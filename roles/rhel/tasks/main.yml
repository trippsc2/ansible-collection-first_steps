---
- name: Gather distribution facts
  when:
    - ansible_distribution is not defined or
      ansible_os_family is not defined
  ansible.builtin.setup:
    gather_subset:
      - '!all'
      - '!min'
      - distribution
      - os_family

- name: Check if RHEL based distribution
  ansible.builtin.assert:
    that:
      - ansible_os_family == "RedHat"
    fail_msg: "This role is only supported on RHEL based distributions."
    success_msg: "This role is supported on RHEL based distributions."

- name: Install RHEL subscription
  when:
    - ansible_distribution == "RedHat"
  become: true
  community.general.redhat_subscription:
    state: present
    username: "{{ rhel_red_hat_username }}"
    password: "{{ rhel_red_hat_password }}"
    auto_attach: "{{ rhel_subscription_auto_attach }}"
    syspurpose:
      usage: "{{ rhel_subscription_syspurpose_usage }}"
      service_level_agreement: "{{ rhel_subscription_syspurpose_service_level_agreement }}"
      sync: "{{ rhel_subscription_syspurpose_sync }}"

- name: Install SETroubleshoot package
  become: true
  ansible.builtin.dnf:
    name:
      - setroubleshoot-server
    state: present

- name: Disable auditd service
  become: true
  ansible.builtin.systemd_service:
    name: auditd.service
    enabled: false

- name: Configure dnf to keep only 2 kernel versions
  become: true
  ansible.builtin.lineinfile:
    path: /etc/yum.conf
    regexp: '^installonly_limit='
    line: 'installonly_limit=2'
    state: present

- name: Disable hibernation
  loop:
    - sleep.target
    - suspend.target
    - hibernate.target
    - hybrid-sleep.target
  become: true
  ansible.builtin.systemd_service:
    name: "{{ item }}"
    state: stopped
    enabled: false
    masked: true

- name: Reduce swappiness to 0
  become: true
  ansible.posix.sysctl:
    name: vm.swappiness
    value: '0'
    state: present
    reload: true

- name: Remove unnecessary services
  loop:
    - cockpit
    - dhcpv6-client
  become: true
  ansible.posix.firewalld:
    service: "{{ item }}"
    permanent: true
    state: disabled

- name: Update all packages
  become: true
  ansible.builtin.dnf:
    name: '*'
    state: latest
    update_only: true
